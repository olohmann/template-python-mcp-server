[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "TODO-TEMPLATE-mcp-server"
version = "0.1.0"
description = "TODO-TEMPLATE"
readme = "README.md"
license = { text = "MIT" }
authors = [{ name = "TODO-TEMPLATE-AUTHOR", email = "author@example.com" }]
keywords = ["mcp", "server", "template"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.13"
dependencies = ["fastmcp>=2.8.1", "uvicorn>=0.34.3", "structlog>=25.4.0"]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.23.0",
    "pyright>=1.1.380",
    "ruff>=0.6.0",
    "pre-commit>=3.6.0",
]

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.ruff]
line-length = 120
target-version = "py313"
indent-width = 4

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F"]
extend-select = ["I"]
fixable = ["ALL"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false

[tool.pyright]
typeCheckingMode = "strict"
pythonVersion = "3.13"
include = ["src"]
exclude = ["tests/fixtures", "**/__pycache__", ".venv", "build", "dist"]
reportMissingImports = true
reportMissingTypeStubs = false
reportUnusedImports = true
reportUnusedVariables = true
reportDuplicateImport = true
reportUntypedFunctionDecorator = true
reportUntypedClassDecorator = true
reportUntypedBaseClass = true
reportUntypedNamedTuple = true
reportPrivateUsage = true
reportConstantRedefinition = true
reportIncompatibleMethodOverride = true
reportIncompatibleVariableOverride = true
reportInconsistentConstructor = true
